name: Build Test Release

on:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      STEAM_FILE_ID: ${{ secrets.STEAM_FILE_ID }}
      REF: ${{ github.event.client_payload.ref }}
    steps:
    - name: Configure and reload Docker daemon to allow for bigger shm
      run: |
        echo '{ "cgroup-parent": "/actions_job", "default-shm-size": "512M" }' | sudo tee /etc/docker/daemon.json && sudo systemctl reload docker
    - uses: actions/checkout@v2
      with:
        ref: master
        fetch-depth: 1
    - name: Checkout gitlab
      run: |
        cd "$GITHUB_WORKSPACE"
        echo "Clone $REF"
        git clone --depth 1 -b "$REF" https://HappyNTH:${GITLAB_TOKEN}@gitlab.com/Zapdude/mod.git owb
        cd owb/oldworldblues
        sed -i 's/Old World Blues/Old World Blues: Permanant Testing Version/g' descriptor.mod
        echo "remote_file_id=\"$STEAM_FILE_ID\""  | tee -a descriptor.mod
        echo "path=\"mod/oldworldblues\""  | tee -a descriptor.mod
        cd "$GITHUB_WORKSPACE"
        mv owb/oldworldblues owb/oldworldblues_dev
        cp -rf owb/oldworldblues_dev "$GITHUB_WORKSPACE"
        rm -rf owb
    - name: Build release through PrepareForUpload.sh
      run: |
        cp PrepareForUpload.sh "$GITHUB_WORKSPACE/oldworldblues_dev" 
        cd "$GITHUB_WORKSPACE/oldworldblues_dev" 
        devDir="oldworldblues_dev"
        destDir="oldworldblues"
        chmod +x ./PrepareForUpload.sh
        ./PrepareForUpload.sh $devDir $destDir Thumbnail.png
        mkdir build
        mv ../$destDir build
        mv ../"$destDir.mod" build
        mv build "$GITHUB_WORKSPACE"
        cd "$GITHUB_WORKSPACE/build"
        pwd
        ls
    - name: Upload to Steam Workshop
      uses: Yard1/PDX-Steam-Workshop-Publisher-Action@master
      with:
        steamLogin: ${{ secrets.STEAMUSERNAME }}
        steamPassword: ${{ secrets.STEAMPASSWORD }}
        PDXLogin: antoni.baum@protonmail.com
        PDXPassword: ${{ secrets.PDXPASSWORD }}
        googleAPICredentials: ${{ secrets.GOOGLEAPICREDENTIALS }}
        googleClientSecret: ${{ secrets.GOOGLECLIENTSECRET }}
        modPath: "build"
        steamSentryFileName:  ${{ secrets.STEAMSENTRYFILENAME }}
        steamSentryFileHex: ${{ secrets.STEAMSENTRYFILEHEX }}
        debugImagePath: images
        descriptionPath: steam_description.txt
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: debug_images
        path: images
